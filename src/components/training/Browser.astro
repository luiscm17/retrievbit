---
import { ScrollArea } from "@components/common/shortcodes/ScrollArea";
import type { MenuItem } from "@/types";
import { getRelativeLocaleUrl } from 'astro:i18n';
import { useTranslations, getLangFromUrl } from "@i18n/utils";

interface Props {
  menu: MenuItem[];
  currentPage: string;
}

const { menu, currentPage } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const cleanId = (id: string) => id.replace(/-index$/, '');
---

{
  menu.length > 0 && (
    <div class="relative glass rounded-lg p-4 my-2 w-full intersect:animate-fadeRight opacity-0">
      <ScrollArea className="h-full" client:only="react">
        <h2 class="text-2xl border-none">{t("nav.training")}</h2>
        <ul class="list-none m-0">
          {menu.map((item) => (
            <li class="ml-0">
              <a
                href={getRelativeLocaleUrl(lang, `/training/${cleanId(item.id)}`)}
                class={`w-full leading-none no-underline ${item.id === currentPage ? "font-bold" : ""}`}
              >
                {item.title}
              </a>
              {item.children?.length > 0 ? (
                <ul class="list-disc m-0 text-sm">
                  {item.children.map((child) => (
                    <li class="ml-4">
                      <a
                        href={getRelativeLocaleUrl(lang, `/training/${cleanId(item.id)}/${cleanId(child.id)}`)}
                        class={`w-full leading-tight no-underline ${child.id === currentPage ? "font-bold" : ""}`}
                      >
                        {child.title}
                      </a>
                    </li>
                  ))}
                </ul>
              ) : (
                <div style="display: none;">No children to display for {item.id}</div>
              )}
            </li>
          ))}
        </ul>
      </ScrollArea>
    </div>
  )
}
