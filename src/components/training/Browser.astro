---
import { ScrollArea } from "@components/common/shortcodes/ScrollArea";
import type { MenuItem } from "@/types";
import { getRelativeLocaleUrl } from 'astro:i18n';
import { useTranslations, getLangFromUrl } from "@i18n/utils";

interface Props {
  menu: MenuItem[];
  currentPage: string;
}

const { menu, currentPage } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const cleanId = (id: string) => id.replace(/-index$/, '');

// Function to generate a unique ID based on the title
const generateId = (title: string = '') => 
  title.toLowerCase().replace(/[^\w]+/g, '-');
---

{
  menu.length > 0 && (
    <div class="relative glass rounded-lg p-4 my-2 w-full intersect:animate-fadeRight opacity-0">
      <ScrollArea className="h-full" client:only="react">
        <h2 class="text-2xl border-none">{t("nav.training")}</h2>
        <ul class="list-none m-0 py-2" x-data="{ openItem: '' }">
          {menu.map((item) => {
            const itemId = generateId(item.title);
            const hasChildren = item.children?.length > 0;
            const isCurrent = item.id === currentPage;
            const isOpen = `openItem === '${itemId}'`;
            
            return (
              <li class="ml-0 py-1 group" data-key={itemId} x-data="{ isOpen: false }">
                <div class="flex items-center">
                  {hasChildren && (
                    <button 
                      @click.stop.prevent="isOpen = !isOpen"
                      class="mr-1 text-gray-500 hover:text-gray-700 focus:outline-none transition-colors duration-200"
                      :aria-expanded="isOpen"
                      :aria-controls="`accordion-${itemId}`"
                    >
                      <svg 
                        class="w-4 h-4 transition-transform duration-300 ease-in-out transform" 
                        :class="{ 'rotate-90': isOpen }"
                        fill="none" 
                        stroke="currentColor" 
                        viewBox="0 0 24 24"
                      >
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                      </svg>
                    </button>
                  )}
                  <a
                    href={getRelativeLocaleUrl(lang, `/training/${cleanId(item.id)}`)}
                    @click="if($event.target.tagName === 'A' && hasChildren) { $event.preventDefault(); isOpen = !isOpen; }"
                    class="w-full leading-none no-underline"
                    :class="{ 'pl-6': !hasChildren }"
                  >
                    {item.title}
                  </a>
                </div>
                
                {hasChildren && (
                  <div 
                    id={`accordion-${itemId}`}
                    x-show="isOpen"
                    x-transition:enter="transition-all ease-in-out duration-300"
                    x-transition:enter-start="opacity-0 max-h-0"
                    x-transition:enter-end="opacity-100 max-h-96"
                    x-transition:leave="transition-all ease-in-out duration-200"
                    x-transition:leave-start="opacity-100 max-h-96"
                    x-transition:leave-end="opacity-0 max-h-0"
                    class="overflow-hidden ml-4"
                  >
                    <ul class="list-disc m-0 text-sm py-1">
                      {item.children.map((child) => (
                        <li class="ml-4">
                          <a
                            href={getRelativeLocaleUrl(lang, `/training/${cleanId(item.id)}/${cleanId(child.id)}`)}
                            class={`w-full leading-tight no-underline hover:text-primary-500 transition-colors duration-200 ${child.id === currentPage ? "font-bold text-primary-500" : ""}`}
                          >
                            {child.title}
                          </a>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
              </li>
            );
          })}
        </ul>
      </ScrollArea>
    </div>
  )
}
