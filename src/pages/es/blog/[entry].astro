---
import type { GetStaticPaths } from "astro";
import type { BlogEntry } from "@/types";
import { sortByDate } from "@lib/sortFunctions";
import EntryLayout from "@components/blog/EntryLayout.astro";
import { getEntries } from "@lib/contentParser";
import similerItems from "@lib/similarItems";

interface Props {
  entry: BlogEntry;
  entries: BlogEntry[];
}

export const getStaticPaths = (async () => {
  const lang = "es";
  const entries = (await getEntries("blog", lang, sortByDate)) as BlogEntry[];
  
  return entries.map((entry) => {
    const segments = entry.id.split("/");
    const entrySlug = segments.length > 2 
      ? segments.slice(2).join("/") 
      : entry.id; 

    return {
      params: {
        entry: entrySlug,
      },
      props: { 
        entry, 
        entries 
      },
    };
  });
}) satisfies GetStaticPaths;

const { entry, entries } = Astro.props as Props;
const relatedEntries = similerItems(entry, entries, entry.id);
---

<EntryLayout entry={entry} relatedEntries={relatedEntries} />
