---
import type { AuthorsEntry, BlogEntry } from "@/types";
import EntryLayout from "@components/authors/EntryLayout.astro";
import { slugify } from "@lib/textConverter";
import { getEntries } from "@lib/contentParser";
import { sortByDate } from "@lib/sortFunctions";

const lang = "es";

export async function getStaticPaths() {
  const entries = (await getEntries("authors", "es")) as AuthorsEntry[];
  const paths = entries.map((entry) => {
    // Extraer solo el slug del autor sin el prefijo de idioma
    const slug = entry.id.split('/').pop();
    return {
      params: {
        entry: slug,
      },
      props: { 
        entry: {
          ...entry,
          // Asegurarse de que el ID incluya el prefijo 'es/'
          id: `es/${slug}`
        } 
      },
    };
  });
  return paths;
}

const { entry } = Astro.props;
const { title } = entry.data;
const blogEntries = (await getEntries("blog", lang, sortByDate)) as BlogEntry[];
const filteredBlogEntries = blogEntries.filter(
  (entry: BlogEntry) =>
    slugify(entry.data.author?.id ? entry.data.author.id : "Jane Doe") ===
    slugify(title)
);
---

<EntryLayout entry={entry} recentBlogEntries={filteredBlogEntries} />
