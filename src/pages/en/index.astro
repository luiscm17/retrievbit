---
import { getIndex } from "@lib/contentParser";
import EntryLayout from "@components/home/EntryLayout.astro";
import type { HomeEntry, SearchableEntry, DocsEntry } from "@/types";
import { getCollection, type CollectionEntry } from "astro:content";
import { getGroups } from "@lib/contentParser";
import { sortByTitle } from "@lib/sortFunctions";

const lang = Astro.url.pathname.split("/")[1] || "en";

// Obtener entradas tipadas correctamente

type CollectionName = "blog" | "tutorials" | "docs" | "about" | "authors" | "concepts" | "portfolio" | "terms";

const collectionNames: CollectionName[] = [
    "blog",
    "tutorials",
    "docs",
    "about",
    "authors",
    "concepts",
    "portfolio",
    "terms",
];

async function getCollectionEntries(collection: CollectionName) {
return  getCollection(collection, ({ id }) =>
    id.startsWith(`${lang}/`),
)
}

const allEntries = await Promise.all(
    collectionNames.map(name => getCollectionEntries(name))
);


const entry = (await getIndex("home", lang)) as HomeEntry;
const searchList = allEntries.flat() as SearchableEntry[];
const groupIndices = (await getGroups("docs", lang, sortByTitle)) as DocsEntry[];
---

<EntryLayout entry={entry} entries={groupIndices} searchList={searchList} />
