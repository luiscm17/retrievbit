---
import type { AuthorsEntry, BlogEntry } from "@/types";
import EntryLayout from "@components/authors/EntryLayout.astro";
import { slugify } from "@lib/textConverter";
import { getEntries } from "@lib/contentParser";
import { sortByDate } from "@lib/sortFunctions";

export async function getStaticPaths() {
  const lang = "en";
  const entries = (await getEntries("authors", lang)) as AuthorsEntry[];
  return entries.map((entry) => ({
    params: {
      entry: entry.id.split("/").pop()!,
    },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const lang = Astro.currentLocale || "en";
const { title } = entry.data;
const blogEntries = (await getEntries("blog", lang, sortByDate)) as BlogEntry[];
const filteredBlogEntries = blogEntries.filter(
  (entry: BlogEntry) =>
    slugify(entry.data.author?.id ? entry.data.author.id : "Jane Doe") ===
    slugify(title)
);
---

<EntryLayout entry={entry} recentBlogEntries={filteredBlogEntries} />
